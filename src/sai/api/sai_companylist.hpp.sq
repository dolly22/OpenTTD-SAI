/* $Id$ */

/*
 * This file is part of OpenTTD.
 * OpenTTD is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * OpenTTD is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with OpenTTD. If not, see <http://www.gnu.org/licenses/>.
 */

/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#include "sai_companylist.hpp"

namespace SQConvert {
	/* Allow SAICompanyList to be used as Squirrel parameter */
	template <> SAICompanyList *GetParam(ForceType<SAICompanyList *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, 0); return  (SAICompanyList *)instance; }
	template <> SAICompanyList &GetParam(ForceType<SAICompanyList &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, 0); return *(SAICompanyList *)instance; }
	template <> const SAICompanyList *GetParam(ForceType<const SAICompanyList *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, 0); return  (SAICompanyList *)instance; }
	template <> const SAICompanyList &GetParam(ForceType<const SAICompanyList &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr) { SQUserPointer instance; sq_getinstanceup(vm, index, &instance, 0); return *(SAICompanyList *)instance; }
	template <> int Return<SAICompanyList *>(HSQUIRRELVM vm, SAICompanyList *res) { if (res == NULL) { sq_pushnull(vm); return 1; } res->AddRef(); Squirrel::CreateClassInstanceVM(vm, "SAICompanyList", res, NULL, DefSQDestructorCallback<SAICompanyList>); return 1; }
} // namespace SQConvert

void SQSAICompanyList_Register(Squirrel *engine)
{
	DefSQClass <SAICompanyList> SQSAICompanyList("SAICompanyList");
	SQSAICompanyList.PreRegister(engine, "AIList");
	SQSAICompanyList.AddConstructor<void (SAICompanyList::*)(), 1>(engine, "x");

	SQSAICompanyList.PostRegister(engine);
}
