/* $Id$ */
/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#ifndef AI_STATION_HPP_SQH
#define AI_STATION_HPP_SQH

#include "ai_station.hpp"

namespace SQConvert {
	/* Allow enums to be used as Squirrel parameters */
	template <> AIStation::ErrorMessages GetParam(ForceType<AIStation::ErrorMessages>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> int Return<AIStation::ErrorMessages>(HSQUIRRELVM vm, AIStation::ErrorMessages res);
	template <> AIStation::StationType GetParam(ForceType<AIStation::StationType>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> int Return<AIStation::StationType>(HSQUIRRELVM vm, AIStation::StationType res);

	/* Allow AIStation to be used as Squirrel parameter */
	template <> AIStation *GetParam(ForceType<AIStation *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> AIStation &GetParam(ForceType<AIStation &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> const AIStation *GetParam(ForceType<const AIStation *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> const AIStation &GetParam(ForceType<const AIStation &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> int Return<AIStation *>(HSQUIRRELVM vm, AIStation *res);
}; // namespace SQConvert

void SQAIStation_Register(Squirrel *engine);

#endif  /* AI_STATION_HPP_SQH */
