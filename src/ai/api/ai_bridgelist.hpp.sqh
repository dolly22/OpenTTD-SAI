/* $Id$ */
/* THIS FILE IS AUTO-GENERATED; PLEASE DO NOT ALTER MANUALLY */

#ifndef AI_BRIDGELIST_HPP_SQH
#define AI_BRIDGELIST_HPP_SQH

#include "ai_bridgelist.hpp"

namespace SQConvert {
	/* Allow AIBridgeList to be used as Squirrel parameter */
	template <> AIBridgeList *GetParam(ForceType<AIBridgeList *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> AIBridgeList &GetParam(ForceType<AIBridgeList &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> const AIBridgeList *GetParam(ForceType<const AIBridgeList *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> const AIBridgeList &GetParam(ForceType<const AIBridgeList &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> int Return<AIBridgeList *>(HSQUIRRELVM vm, AIBridgeList *res);
}; // namespace SQConvert

void SQAIBridgeList_Register(Squirrel *engine);

namespace SQConvert {
	/* Allow AIBridgeList_Length to be used as Squirrel parameter */
	template <> AIBridgeList_Length *GetParam(ForceType<AIBridgeList_Length *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> AIBridgeList_Length &GetParam(ForceType<AIBridgeList_Length &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> const AIBridgeList_Length *GetParam(ForceType<const AIBridgeList_Length *>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> const AIBridgeList_Length &GetParam(ForceType<const AIBridgeList_Length &>, HSQUIRRELVM vm, int index, SQAutoFreePointers *ptr);
	template <> int Return<AIBridgeList_Length *>(HSQUIRRELVM vm, AIBridgeList_Length *res);
}; // namespace SQConvert

void SQAIBridgeList_Length_Register(Squirrel *engine);

#endif  /* AI_BRIDGELIST_HPP_SQH */
